PyInstaller — это мощный инструмент для
преобразования скриптов Python в исполняемые файлы для Windows, macOS и Linux.
Он собирает все зависимости в один исполняемый файл,
что делает его удобным для распространения приложений.
 Вот пошаговая инструкция как воспользоваться PyInstaller:

### Установка PyInstaller

Для начала, вам нужно установить PyInstaller. Вы можете сделать это с помощью pip:

```bash
pip install pyinstaller
```

### Создание исполняемого файла

1. **Перейдите в папку с вашим скриптом:**

   ```bash
   cd путь/к/вашему/скрипту
   ```

2. **Запустите PyInstaller:**

   Самый простой способ использования PyInstaller — это запустить его с вашим скриптом:

   ```bash
   pyinstaller ваш_скрипт.py
   ```

   Это создаст исполняемый файл с настройками по умолчанию.
    В результате выполнения этой команды в текущей директории
    появятся две новые папки: `build` и `dist`, а также файл спецификации `.spec`.

### Настройка PyInstaller

Чтобы настроить процесс сборки, вы можете использовать различные опции командной строки.
 Вот некоторые из них:

- **Однофайловый режим:**

  Если вы хотите создать один исполняемый файл, используйте флаг `--onefile`:

  ```bash
  pyinstaller --onefile ваш_скрипт.py
  ```

- **Иконка:**

  Чтобы добавить иконку к вашему исполняемому файлу, используйте флаг `--icon`:

  ```bash
  pyinstaller --onefile --icon=путь/к/иконке.ico ваш_скрипт.py
  ```

- **Без консоли:**

  Если ваше приложение является GUI-приложением и
  вы не хотите видеть консольное окно,
   используйте флаг `--noconsole` (или `--windowed`):

  ```bash
  pyinstaller --onefile --noconsole ваш_скрипт.py
  ```

### Дополнительные настройки

Иногда после первой сборки вам нужно внести дополнительные изменения.
Для этого используется файл спецификаций `.spec`,
который создается после первого запуска PyInstaller:

1. **Редактирование файла .spec:**

   Откройте файл `.spec`в текстовом редакторе и внесите
   необходимые изменения. Например, вы можете добавить
   дополнительные файлы, изменить путь вывода и т.д.

2. **Сборка с использованием файла .spec:**

   После редактирования файла спецификаций,
   вы можете собрать исполняемый файл с его использованием:

   ```bash
   pyinstaller ваш_скрипт.spec
   ```

### Пример использования

Допустим, у вас есть скрипт `main.py`, и вы хотите
создать однофайловый исполняемый файл с иконкой и
без консольного окна. Команда будет выглядеть так:

```bash
pyinstaller --onefile --noconsole --icon=my_icon.ico main.py
```

### Проверка и тестирование

После успешной сборки, исполняемый файл будет находиться в
 директории `dist`. Перейдите в эту папку и протестируйте ваш исполняемый файл,
  чтобы убедиться, что он работает как ожидалось.

```bash
cd dist
./main  # или main.exe на Windows
```

### Заключение

Теперь вы знаете, как использовать PyInstaller для создания
исполняемых файлов из ваших Python-скриптов. Это всего лишь базовое руководство,
и у PyInstaller есть множество других опций и возможностей, которые могут
пригодиться в зависимости от ваших конкретных нужд.
Обязательно ознакомьтесь с официальной документацией для более подробной информации.
